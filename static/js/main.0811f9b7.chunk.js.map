{"version":3,"sources":["movie.svg","search.svg","components/spinners.js","components/AutoComplete.js","App.js","reportWebVitals.js","index.js"],"names":["spinners","className","AutoComplete","state","movies","api_key","inputValue","loading","showSuggestion","makeApiCall","_","debounce","value","this","setState","length","axios","get","then","res","data","results","catch","e","alert","title","onChange","getSuggestions","target","placeholder","slice","map","index","onClick","changeInputValue","original_title","vote_average","release_date","id","React","Component","App","alt","src","movie","search","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,mC,wDCS1BA,MATf,WACI,OACI,gCACI,qBAAKC,UAAU,6EACf,qBAAKA,UAAU,sEACf,qBAAKA,UAAU,0E,iBCkEZC,E,kDAlEX,aAAc,IAAD,8BACT,gBAGJC,MAAO,CACHC,OAAO,GACPC,QAAQ,mCACRC,WAAW,GACXC,SAAQ,EACRC,gBAAgB,GAPhB,EAAKC,YAAcC,IAAEC,SAAS,EAAKF,YAAa,KAFvC,E,kDAYb,SAAeG,GACXC,KAAKC,SAAS,CAACR,WAAYM,EAAOJ,gBAAe,IAAO,WACpDK,KAAKC,SAAS,CAAGP,SAAQ,IAClBM,KAAKV,MAAMG,WAAWS,OAAS,EAC9BF,KAAKJ,eAELI,KAAKC,SAAS,CAAGP,SAAQ,IACzBM,KAAKC,SAAS,CAACN,gBAAe,U,yBAK9C,WAAc,IAAD,OACT,IACOK,KAAKV,MAAMG,YACVU,IAAMC,IAAN,4DAA+DJ,KAAKV,MAAME,QAA1E,iCAA0GQ,KAAKV,MAAMG,aACpHY,MAAK,SAAAC,GACF,IAAMf,EAASe,EAAIC,KAAKC,QACxB,EAAKP,SAAS,CAACV,SAASG,SAAQ,OACjCe,OAAM,SAACC,GACNC,MAAMD,MAGhB,MAAOA,GACLC,MAAM,0B,8BAGd,SAAiBC,GACbZ,KAAKC,SAAS,CAACN,gBAAe,EAAOF,WAAYmB,M,oBAErD,WAAS,IAAD,OACJ,OACA,sBAAKxB,UAAU,2DAAf,UACA,uBAAOyB,SAAW,SAACH,GAAD,OAAO,EAAKI,eAAeJ,EAAEK,OAAOhB,QAASA,MAAOC,KAAKV,MAAMG,WAAYL,UAAU,2EAA2E4B,YAAY,qBAC9L,qBAAK5B,UAAU,mEAAf,SAEQY,KAAKV,MAAMI,QAAW,cAAC,EAAD,gBAClBM,KAAKV,MAAMC,OAAO0B,MAAM,EAAE,GAAGC,KAAI,SAACC,GAC9B,OAAG,EAAK7B,MAAMK,eAEN,sBAAoByB,QAAS,WAAO,EAAKC,iBAAiBF,EAAMG,iBAAkBlC,UAAU,oBAA5F,UACI,oBAAIA,UAAU,OAAd,SAAsB+B,EAAMG,iBAC5B,oBAAGlC,UAAU,eAAb,UAA6B+B,EAAMI,aAAnC,YAA4DJ,EAAMK,aAAgBL,EAAMK,aAAaP,MAAM,EAAE,GAAG,QAF1GE,EAAMM,IAMf,iB,GA3DNC,IAAMC,WC6BlBC,MA7Bf,WACE,OACE,qBAAKxC,UAAU,uDAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,gCAAf,SACI,qBAAKA,UAAU,kFAAf,SACE,qBAAKA,UAAU,qCAAf,SACI,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,wFAAf,SACE,qBAAKyC,IAAI,QAAQzC,UAAU,YAAY0C,IAAKC,MAG5C,cAAC,EAAD,IACF,qBAAK3C,UAAU,2EAAf,SACE,qBAAKyC,IAAI,SAASzC,UAAU,gCAAiC0C,IAAKE,eAMhF,qBAAK5C,UAAU,gCAAf,SACI,qBAAKA,UAAU,qDCbZ6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0811f9b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/movie.f7adbb31.svg\";","export default __webpack_public_path__ + \"static/media/search.8adf7fa5.svg\";","function spinners(){\r\n    return  (\r\n        <div>\r\n            <div className=\"inline-block wiggle animate-spin ease duration-300 w-5 h-5 bg-black mx-2\"></div>\r\n            <div className=\"inline-block animate-spin ease duration-300 w-5 h-5 bg-black mx-2\"></div>\r\n            <div className=\"inline-block animate-spin ease duration-300 w-5 h-5 bg-black mx-2\"></div>\r\n        </div>\r\n    );\r\n};\r\nexport default spinners;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from './spinners';\r\nimport  _  from 'lodash';\r\nclass AutoComplete extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.makeApiCall = _.debounce(this.makeApiCall, 1000);        \r\n    }\r\n    state ={\r\n        movies:[],\r\n        api_key:'d1d8e84202033bc9d98507ad172d5096',\r\n        inputValue:'',\r\n        loading:false,\r\n        showSuggestion: true,\r\n\r\n    }\r\n    getSuggestions(value){\r\n        this.setState({inputValue: value, showSuggestion:true}, function(){\r\n            this.setState({  loading:true})\r\n                if(this.state.inputValue.length > 2) {\r\n                    this.makeApiCall();\r\n                }else {\r\n                    this.setState({  loading:false})\r\n                    this.setState({showSuggestion:false});\r\n                }\r\n\r\n        });\r\n    }\r\n    makeApiCall(){\r\n        try {\r\n            if(this.state.inputValue){\r\n                axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${this.state.api_key}&language=en-US&query=${this.state.inputValue}`)\r\n                .then(res => {\r\n                    const movies = res.data.results;\r\n                    this.setState({movies , loading:false});\r\n                }).catch((e) => {\r\n                    alert(e);\r\n                });\r\n            }\r\n        } catch (e) {\r\n            alert('There was an error!');\r\n        }\r\n    }\r\n    changeInputValue(title ){\r\n        this.setState({showSuggestion:false, inputValue: title})\r\n    }\r\n    render(){\r\n        return ( \r\n        <div className=\"px-5 text-2xl py-4 w-1/2 bg-gray-100 h-full rounded-r-lg\">\r\n        <input onChange={ (e) => this.getSuggestions(e.target.value)}  value={this.state.inputValue} className=\"w-full h-full outline-none bg-gray-100 text-black font-normal opacity-75\" placeholder=\"Enter movie name\"></input>\r\n        <div className=\"absolute rounded mt-4 bg-white text-black z-10 w-2/5  shadsow-lg\">\r\n            {\r\n                this.state.loading ? (<Spinner > </Spinner> ) : (\r\n                    this.state.movies.slice(0,8).map((index) => {\r\n                        if(this.state.showSuggestion){\r\n                            return (           \r\n                                <div key={index.id} onClick={() => {this.changeInputValue(index.original_title)}} className=\"hover:bg-gray-100\" >\r\n                                    <h2 className=\"ml-4\">{index.original_title}</h2>\r\n                                    <p className=\"text-sm ml-4\">{index.vote_average} Rating, { (index.release_date) ? index.release_date.slice(0,4):\"\"}</p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        return ( null);\r\n                    })\r\n                )\r\n            }\r\n        </div>\r\n      </div>);\r\n    }\r\n}\r\nexport default AutoComplete;","import './App.css';\nimport movie from './movie.svg';\nimport search from './search.svg';\nimport AutoComplete from './components/AutoComplete.js'\nfunction App() {\n  return (\n    <div className=\"bg-gradient-to-r from-green-400 to-blue-500 h-screen\">\n      <div className=\"h-full\">\n        <div className=\"grid grid-cols-3 mx-14 h-1/6 \" >\n            <div className=\"col-span-3 row-span-1 w-full bg-gradient-to-r h-full from-yellow-500 to-red-500\">\n              <div className=\"grid grid-cols-1 h-4/6 mx-14 my-2 \">\n                  <div className=\"flex w-full justify-center\">\n                    <div className=\"flex items-center justify-center  w-24 h-10h-full opacity-75 bg-gray-100 rounded-l-lg\" >\n                      <img alt=\"movie\" className=\"w-12 h-12\" src={movie}></img>\n                      \n                    </div>\n                      <AutoComplete />\n                    <div className=\"flex items-center justify-center rounded-lg mx-4 w-24 bg-gray-100 h-full\">\n                      <img alt=\"search\" className=\"w-12 h-12 justify-self-center\"  src={search}></img>\n                    </div>\n                  </div>\n              </div>\n            </div>\n        </div>\n        <div className=\"grid grid-cols-3 mx-14 h-5/6 \" >\n            <div className=\"col-span-3 row-span-1 w-full  bg-gray-50\">\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}